<?xml version='1.0' encoding='utf-8'?>
<class id="Brickware::Utility::JSONPair" name="JSONPair" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief> A class that represents a basic key value pair in JSON</brief>
  <doc>This is mostly a  container class to store data similar to std::pair.
However in the JSON spec data will always be paired
 with a string as the key so there's no need for templating
</doc>
  <constructor id="Brickware::Utility::JSONPair::JSONPair" name="JSONPair">
    <brief>Blank Constructor</brief>
  </constructor>
  <constructor id="Brickware::Utility::JSONPair::JSONPair" name="JSONPair">
    <brief>Constructor if you know your data</brief>
    <argument id="Brickware::Utility::JSONPair::JSONPair::key" name="key">
      <doc>The string to be this pair's key</doc>
      <type builtin="yes" name="char" qualifier="*" />
    </argument>
    <argument id="Brickware::Utility::JSONPair::JSONPair::value" name="value">
      <type name="JSONValue" ref="Brickware::Utility#Brickware::Utility::JSONValue" />
    </argument>
  </constructor>
  <method id="Brickware::Utility::JSONPair::getKey" name="getKey">
    <brief>Returns the key of this pair.</brief>
    <return>
      <type builtin="yes" name="char" qualifier="*" />
    </return>
  </method>
  <method id="Brickware::Utility::JSONPair::getValue" name="getValue">
    <brief>Returns the value of this pair</brief>
    <return>
      <type name="JSONValue" ref="Brickware::Utility#Brickware::Utility::JSONValue" />
    </return>
  </method>
</class>
