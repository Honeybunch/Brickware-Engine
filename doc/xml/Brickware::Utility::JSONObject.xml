<?xml version='1.0' encoding='utf-8'?>
<class id="Brickware::Utility::JSONObject" name="JSONObject" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief> A class that represents an object in JSON</brief>
  <doc>Since there is no generic object in C or C++ one had to be made.
It's essentially a collection of JSONPairs.
</doc>
  <methodtemplate id="Brickware::Utility::JSONObject::getValue" name="getValue">
    <brief> Get a value out of the object.</brief>
    <doc>The given typename will be the type that the resulting data
will be attempted to be mapped to.

</doc>
    <return>
      <doc>The value at the given key if it exists,
        NULL if it doesn't exist.</doc>
      <type name="T" />
    </return>
    <argument id="Brickware::Utility::JSONObject::getValue::key" name="key">
      <doc>The string that maps to the value we want to get.</doc>
      <type builtin="yes" name="char" qualifier="*" />
    </argument>
    <templatetypeparameter id="Brickware::Utility::JSONObject::getValue::T" name="T" />
  </methodtemplate>
  <constructor id="Brickware::Utility::JSONObject::JSONObject" name="JSONObject">
    <brief>Blank Constructor</brief>
  </constructor>
  <method id="Brickware::Utility::JSONObject::addPair" name="addPair">
    <brief> Add a JSONPair to the object.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="Brickware::Utility::JSONObject::addPair::pair" name="pair">
      <doc>the JSONPair to be added to the object</doc>
      <type name="JSONPair" ref="Brickware::Utility::JSONPair#Brickware::Utility::JSONPair" />
    </argument>
  </method>
  <method id="Brickware::Utility::JSONObject::getSize" name="getSize">
    <brief> Get the number of pairs in the object.</brief>
    <return>
      <doc>The count of pairs in the object.</doc>
      <type builtin="yes" name="unsigned int" />
    </return>
  </method>
</class>
